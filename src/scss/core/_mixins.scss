@keyframes dropHeader {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

//@include anim(); Плавное появлении при display: none; to display: block;
@mixin anim() {
  animation-name: dropHeader;
  animation-iteration-count: 1;
  animation-timing-function: ease-in-out;
  animation-duration: 0.3s;
}

//@include clearfix();  ClearFix Все понятно
@mixin clearfix() {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

//@include uldev(); сбрасывает стили у списка
@mixin uldev() {
  margin: 0;
  padding: 0;
  list-style: none;
}
//@include boxsize();
@mixin boxsize() {
  box-sizing: border-box;
}

//@include @bg-img(cover);
@mixin bg-img($size) {
  background-repeat: no-repeat;
  background-size: $size;
  background-position: center center;
}

//Для браузер не поддерживающие свг, заменяем картинку на пнг, а в случаи с ретиной в 2 раза большьше по размеру
//Нарезаем картинки
//pattern.svg
//pattern.png
//pattern@2x.png
$image-path: "../images" !default;
$fallback-extension: "png" !default;
$retina-suffix: "@2x";
@mixin background-image($name, $size: false) {
  background-image: url(#{$image-path}/#{$name}.svg);
  @if ($size) {
    background-size: $size;
  }
  .no-svg & {
    background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

    @media only screen and (-moz-min-device-pixel-ratio: 1.5),
      only screen and (-o-min-device-pixel-ratio: 3/2),
      only screen and (-webkit-min-device-pixel-ratio: 1.5),
      only screen and (min-device-pixel-ratio: 1.5) {
      background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
    }
  }
}
//Пример
//body {
//  @include background-image('pattern');
//}

//Cross browser opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
//Пример
//.faded-text {
//  @include opacity(0.8);
//}

// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      str-replace(
        str-slice($string, $index + str-length($search)),
        $search,
        $replace
      );
  }

  @return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: woff2 woff) {
  $src: null;

  $extmods: (
    eot: "?",
    svg: "#" + str-replace($name, " ", "_")
  );

  $formats: (
    otf: "opentype",
    ttf: "truetype"
  );

  @each $ext in $exts {
    $extmod: if(
      map-has-key($extmods, $ext),
      $ext + map-get($extmods, $ext),
      $ext
    );
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append(
      $src,
      url(quote($path + "." + $extmod)) format(quote($format)),
      comma
    );
  }

  @font-face {
    font-family: quote($name);
    font-display: swap;
    font-style: $style;
    font-weight: $weight;
    src: $src;
  }
}
